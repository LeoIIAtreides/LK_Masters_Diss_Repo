#Final Tweet List Pruner

import pandas as pd

#Function to call list of users from Final_User_List.csv

def get_final_user_list():
    final_user_data = pd.read_csv("Final_User_List.csv")
    return final_user_data['User_ID'].tolist()

VADER_Unpruned = pd.read_csv("VADER_Unpruned.csv")
LIWC_Unpruned = pd.read_csv("LIWC_Unpruned.csv")

#below keeps only rows in VADER+LIWC _Unpruned which appear in a list generated by the author_id column from 'Final_User_List.csv'

VADER_Pruned = VADER_Unpruned[VADER_Unpruned["author_id"].isin(get_final_user_list())]
LIWC_Pruned = LIWC_Unpruned[LIWC_Unpruned["author_id"].isin(get_final_user_list())]

#prunes hyperlinks, ampersands-to-'and's, @s, tabs, new-lines, extraneous whitespace, trims start-and-end respectivly from VADER_Unpruned:

VADER_Pruned["text"] = VADER_Pruned["text"].replace(r"http\S+", "", regex=True).replace(r"www\S+", " ", regex=True)

VADER_Pruned["text"] = VADER_Pruned["text"].str.replace("&amp;", " and ")

VADER_Pruned["text"] = VADER_Pruned["text"].replace(r"@\S+", "", regex=True)

VADER_Pruned["text"] = VADER_Pruned["text"].str.replace("\n", " ")

VADER_Pruned["text"] = VADER_Pruned["text"].str.replace("\t", " ")

VADER_Pruned["text"] = VADER_Pruned["text"].str.replace(" {2,}", " ", regex=True)

VADER_Pruned["text"] = VADER_Pruned["text"].str.strip()

#prunes hyperlinks, ampersands-to-'and's, @s, tabs, new-lines, extraneous whitespace, trims start-and-end respectivly from LIWC_Unpruned:

LIWC_Pruned["text"] = LIWC_Pruned["text"].replace(r"http\S+", "", regex=True).replace(r"www\S+", " ", regex=True)

LIWC_Pruned["text"] = LIWC_Pruned["text"].str.replace("&amp;", " and ")

LIWC_Pruned["text"] = LIWC_Pruned["text"].replace(r"@\S+", "", regex=True)

LIWC_Pruned["text"] = LIWC_Pruned["text"].str.replace("\n", " ")

LIWC_Pruned["text"] = LIWC_Pruned["text"].str.replace("\t", " ")

LIWC_Pruned["text"] = LIWC_Pruned["text"].str.replace(" {2,}", " ", regex=True)

LIWC_Pruned["text"] = LIWC_Pruned["text"].str.strip()



VADER_Pruned.to_csv("VADER_Pruned_Final.csv", index=True, encoding='utf8')
LIWC_Pruned.to_csv("LIWC_Pruned_Final.csv", index=True, encoding='utf8')
